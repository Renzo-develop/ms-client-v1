# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1424b8ab-f542-4bcb-87b5-cbaec469667a'
  imageRepository: 'msclientv1'
  containerRegistry: 'renzoacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      inputs:
        containerRegistry: 'renzoacr'
        repository: 'Renzo-develop/ms-client-v1'
        command: 'build'
        Dockerfile: '**/Dockerfile'
    - task: Docker@2
      inputs:
        containerRegistry: 'renzoacr'
        repository: 'Renzo-develop/ms-client-v1'
        command: 'push'
    - task: HelmInstaller@0
      inputs:
        helmVersion: '2.14.1'
        installKubectl: true
    - task: HelmDeploy@0
      inputs:
        command: 'package'
        chartPath: 'aks-charts'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts: drop'
    